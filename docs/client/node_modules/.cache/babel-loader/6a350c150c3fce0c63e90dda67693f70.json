{"ast":null,"code":"var _jsxFileName = \"C:\\\\React tic tac toe\\\\Tic-Tac-Toe\\\\docs\\\\src\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Square from './Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = () => {\n  _s();\n\n  const initialSquares = new Array(9).fill(null);\n  const [squares, setsquares] = useState(initialSquares);\n  const [isX, setisX] = useState(true);\n\n  const winner = () => {\n    const winningcomb = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (const comb of winningcomb) {\n      const [a, b, c] = comb;\n      if (squares[a] && squares[b] === squares[a] && squares[a] === squares[c]) return squares[a];\n    }\n\n    return null;\n  };\n\n  const Winner = winner();\n  useEffect(() => {\n    if (winner()) alert(`Winner is ${winner()}`);\n  }, [Winner]);\n\n  const handleClick = i => {\n    const filled = squares[i];\n    const Winner = winner();\n    if (filled || Winner) return;\n    const newSquares = [...squares];\n    newSquares[i] = isX ? 'X' : 'O';\n    setsquares(newSquares);\n    setisX(!isX);\n  };\n\n  const chance = winner() ? `Winner is : ${winner()} ` : `Next Chance : ${isX ? 'X' : 'O'} `;\n\n  const renderSquare = i => {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      onTouch: () => handleClick(i),\n      value: squares[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chance\",\n      children: chance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Board-row\",\n      children: [renderSquare(0), renderSquare(1), renderSquare(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Board-row\",\n      children: [renderSquare(3), renderSquare(4), renderSquare(5)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Board-row\",\n      children: [renderSquare(6), renderSquare(7), renderSquare(8)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Board, \"8HQ0skhXaKHWLqJtSzVHfmWDJss=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/React tic tac toe/Tic-Tac-Toe/docs/src/Board.js"],"names":["React","useState","useEffect","Square","Board","initialSquares","Array","fill","squares","setsquares","isX","setisX","winner","winningcomb","comb","a","b","c","Winner","alert","handleClick","i","filled","newSquares","chance","renderSquare"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport Square from './Square'\r\nconst Board = () => {\r\n    const initialSquares=new Array(9).fill(null)\r\n    const[squares,setsquares]=useState(initialSquares)\r\n    const[isX,setisX]=useState(true)\r\n\r\n    const winner=()=>{\r\n        const winningcomb=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]]\r\n        for(const comb of winningcomb)\r\n        {\r\n            const [a,b,c]=comb\r\n            if(squares[a] && squares[b]===squares[a] && squares[a]===squares[c])\r\n                return squares[a]\r\n        }\r\n        return null\r\n    }\r\n\r\n    const Winner=winner()\r\n    useEffect(() => {\r\n        if(winner())\r\n            alert(`Winner is ${winner()}`)\r\n        \r\n    }, [Winner])\r\n\r\n    const handleClick=(i)=>{\r\n        const filled=squares[i]\r\n        const Winner=winner()\r\n        \r\n        if(filled || Winner)\r\n            return\r\n        \r\n        const newSquares=[...squares]\r\n        newSquares[i]=isX ? 'X' : 'O';\r\n        setsquares(newSquares)\r\n        setisX(!isX)\r\n        \r\n    }\r\n    const chance=winner()? `Winner is : ${winner()} ` : `Next Chance : ${isX ? 'X' : 'O'} `\r\n\r\n    const renderSquare=(i)=>{\r\n        return(\r\n            <Square onTouch={()=>handleClick(i)} value={squares[i]} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"Board\">\r\n        <div className=\"chance\">{chance}</div>\r\n         <div className=\"Board-row\">{renderSquare(0)}{renderSquare(1)}{renderSquare(2)}</div>    \r\n         <div className=\"Board-row\">{renderSquare(3)}{renderSquare(4)}{renderSquare(5)}</div> \r\n         <div className=\"Board-row\">{renderSquare(6)}{renderSquare(7)}{renderSquare(8)}</div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n"]},"metadata":{},"sourceType":"module"}